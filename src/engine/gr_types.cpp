//========================================================================
//	file:		gr_types.cpp
//	author:		Shawn Presser 
//	date:		7/6/10
//
// (c) 2010 Shawn Presser.  All Rights Reserved.
//========================================================================

//========================================================================
// Headers
//========================================================================
#include "e_common.h"
#include "gr_types.h"
#include "m_mat44.h"
//========================================================================


//========================================================================
// Constants
//========================================================================
#define VEC2_SIZE				(sizeof(float) * 2)
#define VEC3_SIZE				(sizeof(float) * 3)
//========================================================================

//========================================================================
// Definitions
//========================================================================
SVec2	SVec2::Zero(0.0f, 0.0f);
SVec3	SVec3::Zero(0.0f, 0.0f, 0.0f);
//========================================================================

//========================================================================
// SVec2
//========================================================================

//===================
// SVec2::Set
//===================
void			SVec2::Set(float x, float y)
{
	SetX(x);
	SetY(y);
}


//===================
// SVec2::Set
//===================
void			SVec2::Set(const float* p)
{
	MemCpy(_v, p, VEC2_SIZE);
}


//===================
// SVec2::Set
//===================
void			SVec2::Set(const SVec2& v)
{
	MemCpy(_v, v._v, VEC2_SIZE);
}


//===================
// SVec2::Set
//===================
SVec2&			SVec2::operator =(const SVec2& v)
{
	MemCpy(_v, v._v, VEC2_SIZE);
	return *this;
}
//========================================================================



//========================================================================
// SVec3
//========================================================================

//===================
// SVec3::Set
//===================
void			SVec3::Set(float x, float y, float z)
{
	SetX(x);
	SetY(y);
	SetZ(z);
}


//===================
// SVec3::Set
//===================
void			SVec3::Set(const float* p)
{
	MemCpy(_v, p, VEC3_SIZE);
}


//===================
// SVec3::Set
//===================
void			SVec3::Set(const SVec3& v)
{
	MemCpy(_v, v._v, VEC3_SIZE);
}


//===================
// SVec3::Set
//===================
SVec3&			SVec3::operator =(const SVec3& v)
{
	MemCpy(_v, v._v, VEC3_SIZE);
	return *this;
}


//===================
// SVec3::RotateTranslate
//===================
void			SVec3::RotateTranslate(const MMat44& m)
{
	float x = X();
	float y = Y();
	float z = Z();
	X() = x*m.Get(0, 0) + y*m.Get(0, 1) + z*m.Get(0, 2) + m.Get(0, 3);
	Y() = x*m.Get(1, 0) + y*m.Get(1, 1) + z*m.Get(1, 2) + m.Get(1, 3);
	Z() = x*m.Get(2, 0) + y*m.Get(2, 1) + z*m.Get(2, 2) + m.Get(2, 3);
}
//========================================================================

